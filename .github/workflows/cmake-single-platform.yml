# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build on Ubuntu

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Download eigen
      run: curl https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz --output eigen.tgz
    - name: Untar eigen
      run: tar -xzvf eigen.tgz    

    - name: Download fftw
      run: curl https://fftw.org/fftw-3.3.10.tar.gz --output fftw.tgz
    - name: Untar fftw
      run: tar -xzvf fftw.tgz
          
    - name: Configure fftw
      working-directory: ./fftw-3.3.10/    
      run: ./configure --enable-threads --prefix $PWD
      
    - name: Compile fftw
      working-directory: ./fftw-3.3.10/    
      run: make

    - name: Install fftw
      working-directory: ./fftw-3.3.10/     
      run: make install
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
         export EIGEN3_INCLUDE_DIR=$PWD/eigen-3.4.0/
         export FFTW3_DIR=$PWD/fftw-3.3.10/include/
         cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}


